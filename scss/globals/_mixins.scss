@mixin background($size:cover, $position:center, $repeat:no-repeat) {
   background-size:$size; background-position:$position; background-repeat:$repeat;
}

@mixin linear-gradient($direction, $fromColor, $toColor) {
  background-color: $toColor; /* Fallback Color */
  background: -webkit-gradient(linear, left top, left bottom, from($fromColor), to($toColor)); /* Saf4+, Chrome */
  background: -webkit-linear-gradient($direction, $fromColor, $toColor); /* Chrome 10+, Saf5.1+, iOS 5+ */
  background:    -moz-linear-gradient($direction, $fromColor, $toColor); /* FF3.6 */
  background:     -ms-linear-gradient($direction, $fromColor, $toColor); /* IE10 */
  background:      -o-linear-gradient($direction, $fromColor, $toColor); /* Opera 11.10+ */
  background:         linear-gradient($direction, $fromColor, $toColor);
}
@mixin radial-gradient($from, $to) {
  background: -moz-radial-gradient(center, ellipse cover,  rgba(0,0,0,0.7) 0%, rgba(255,255,255,0) 70%); /* FF3.6+ */
  background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop(0%,rgba(0,0,0,0.7)), color-stop(70%,rgba(255,255,255,0))); /* Chrome,Safari4+ */
  background: -webkit-radial-gradient(center, ellipse cover,  rgba(0,0,0,0.7) 0%,rgba(255,255,255,0) 70%); /* Chrome10+,Safari5.1+ */
  background: -o-radial-gradient(center, ellipse cover,  rgba(0,0,0,0.7) 0%,rgba(255,255,255,0) 70%); /* Opera 12+ */
  background: -ms-radial-gradient(center, ellipse cover,  rgba(0,0,0,0.7) 0%,rgba(255,255,255,0) 70%); /* IE10+ */
  background: radial-gradient(ellipse at center,  rgba(0,0,0,0.7) 0%,rgba(255,255,255,0) 70%); /* W3C */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#b3000000', endColorstr='#00ffffff',GradientType=1 ); /* IE6-9 fallback on horizontal gradient */
}

@mixin filter($filter-type,$filter-amount) { 
  filter: $filter-type+unquote('(#{$filter-amount})');
}

@mixin flex-container($direction:row, $wrap:wrap, $align:strech) {
  display: -webkit-box; display: -webkit-flex; display: -moz-flex;display: -ms-flexbox; display: flex;
  flex-direction: $direction;
  -webkit-flex-wrap:$wrap; -moz-flex-wrap:$wrap; 
  flex-wrap: $wrap;
  @if $align == flex-start { 
    -webkit-box-align: start; -ms-flex-align: start;
  } @else if $align == flex-end { 
    -webkit-box-align: end; -ms-flex-align: end;
  } @else { 
    -webkit-box-align: $align; -ms-flex-align: $align;
  }
  align-items: $align;
}
@mixin flex-item($basis, $grow:1, $shrink:1, $align:auto) {
  @if $grow == 0 {
    width:$basis;
    flex-basis: $basis;
  } @else {
    flex-basis: $basis;
  }
  flex-grow: $grow;
  flex-shrink: $shrink;
  align-self: $align;
}

@mixin animation ($name, $duration, $iteration:1, $delay:0) {
    animation-name: $name;
    animation-duration: $duration;
    animation-iteration-count: $iteration;
    animation-delay:$delay;
    animation-fill-mode: forwards; /* this prevents the animation from restarting! */
}

@mixin transforms($value) {
  transform: $value;
}
@mixin translate($x, $y) {
  transform: translate($x, $y);
}

@mixin translateX($percent) {
  transform: translateX($percent);
}

@mixin translateY($percent) {
  transform: translateY($percent);
}

@mixin rotate($d) {
  transform: rotate($d);
}

@mixin rotateX($d) {
  transform: rotateX($d);
}
@mixin skew($x, $y:0) {
  transform: skew($x, $y);
}

@mixin transition($property: all, $duration: 0.3s, $animation: ease, $delay:0s) { 
  transition: $property $duration $animation $delay;
}
@mixin scale($ratio) {
  transform: scale($ratio); 
}

@mixin position($type, $top:null, $right:null, $bottom:null, $left:null) {
  position:$type;
  @if $top {
    top:$top;
  }
  @if $right {
    right:$right;
  }
  @if $bottom {
    bottom:$bottom;
  }
  @if $left {
    left:$left;
  }
}

@mixin respond-to($media) {
  @if $media == desktop {
    @media only screen and (min-width: $desktop-min) { @content; }
  }
  @else if $media == mobile {
    @media only screen and (max-width: $mobile-max) { @content; }
  }
}


//////////////
// WIGC Specific
@mixin cards() { @include position(fixed,$header-height,0,$footer-height,0); overflow-x: hidden; overflow-y: scroll; z-index: $z-section; padding-top: 20px; padding-bottom: 10px;
  transform: translateY(-120%); transition:transform 1s ease;
  &.visible { transform: translateY(0); }
}

@mixin card() { margin: 0 10px 10px 10px; padding: 10px; background-color:#e8e8e8; box-shadow: 0 0 3px rgba($black,0.3); font-family:$sans; position: relative;
  a { color:$orange; }
  .title { font-family: $serif; margin-bottom: 0.25em; padding-right: 42px; font-size:115%; }
  a.favorite { color:$black; width:26px; height: 26px; @include position(absolute,10px,10px);
    .fill { opacity: 0; }
    &:hover { color:$orange; }
    &.active {
      .fill { opacity: 1; }
    }
  }
  &.full { margin: 0 0 30px 0; padding: 20px; // transition:all 0.5s ease;
    .title { font-size:140%;  /*transition:all 0.5s ease;*/ }
  }
  
}